#Cette propriété spécifie l'URL par défaut du serveur Eureka où l'API Gateway va enregistrer et rechercher les instances des services qu'il va router.
eureka.client.service-url.defaultZone = http://localhost:8761/eureka
# Ce nom est utilisé lors de l'enregistrement de l'application auprès du service de découverte (Eureka), permettant aux autres services de découvrir et de communiquer avec l'API Gateway.
spring.application.name=api-gateway

# Cela configure le niveau de journalisation global pour l'application. Dans cet exemple, le niveau est défini sur INFO, ce qui signifie que seules les informations importantes seront consignées.
logging.level.root=INFO
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator= INFO
logging.level.org.springframework.cloud.gateway= TRACE
#contrôler le niveau de journalisation pour différents composants de l'application.




## Product Service Route
spring.cloud.gateway.routes[0].id=product-service
spring.cloud.gateway.routes[0].uri=lb://product-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/product

## Order Service Route
spring.cloud.gateway.routes[1].id=order-service
spring.cloud.gateway.routes[1].uri=lb://order-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/order

## Discover Server Route
spring.cloud.gateway.routes[2].id=discovery-server
spring.cloud.gateway.routes[2].uri=http://localhost:8761
spring.cloud.gateway.routes[2].predicates[0]=Path=/eureka/web
spring.cloud.gateway.routes[2].filters[0]=SetPath=/
#it loads only the html page of eureka/web, but we want also css and js ...

## Discover Server Static Resources Route
spring.cloud.gateway.routes[3].id=discovery-server-static
spring.cloud.gateway.routes[3].uri=http://localhost:8761
spring.cloud.gateway.routes[3].predicates[0]=Path=/eureka/**


logging.file.name=ApiGateway.log